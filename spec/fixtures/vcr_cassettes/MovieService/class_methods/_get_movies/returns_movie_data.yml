---
http_interactions:
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=&query=lion
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.6.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 401
      message: Unauthorized
    headers:
      Content-Type:
      - application/json; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Mon, 24 Oct 2022 01:54:27 GMT
      Server:
      - openresty
      Cache-Control:
      - public, max-age=300
      X-Cache:
      - Error from cloudfront
      Via:
      - 1.1 29a825d8a219984d47bec4350779b558.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - SEA19-C3
      Alt-Svc:
      - h3=":443"; ma=86400
      X-Amz-Cf-Id:
      - "-Hg0Gqrxe0NERtocKtJ3akqp3XCnfm8qYcuWY4H_uecTYg5bKRTTRw=="
      Vary:
      - Origin
    body:
      encoding: UTF-8
      string: '{"status_code":7,"status_message":"Invalid API key: You must be granted
        a valid key.","success":false}

'
  recorded_at: Mon, 24 Oct 2022 01:54:27 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=<movies_api_key>&query=lion
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.6.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Mon, 24 Oct 2022 02:06:43 GMT
      Server:
      - openresty
      Cache-Control:
      - public, max-age=600
      Vary:
      - Accept-Encoding,Accept-Encoding
      - Origin
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 219e8f088c8c2a564bdacafe44be620a.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - SEA19-C3
      Alt-Svc:
      - h3=":443"; ma=86400
      X-Amz-Cf-Id:
      - aJjhMqOswC4gf3QLmX07tOIjK6M9IybGXRXAosSCk_ubLXM-UERJ9A==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Mon, 24 Oct 2022 02:06:43 GMT
recorded_with: VCR 6.1.0
