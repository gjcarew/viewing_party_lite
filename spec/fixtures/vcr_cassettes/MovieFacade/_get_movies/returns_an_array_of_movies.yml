---
http_interactions:
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=&query=fight
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.6.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 401
      message: Unauthorized
    headers:
      Content-Type:
      - application/json; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Mon, 24 Oct 2022 01:54:00 GMT
      Server:
      - openresty
      Cache-Control:
      - public, max-age=300
      X-Cache:
      - Error from cloudfront
      Via:
      - 1.1 ebe4011a81a36e2bf678f69ce1711330.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - SEA73-P1
      Alt-Svc:
      - h3=":443"; ma=86400
      X-Amz-Cf-Id:
      - gXNTlbJ_wvgrea7xPImOezu1lt9nO9iZcv2Minzb2Rdf68V_IggnnQ==
      Vary:
      - Origin
    body:
      encoding: UTF-8
      string: '{"status_code":7,"status_message":"Invalid API key: You must be granted
        a valid key.","success":false}

'
  recorded_at: Mon, 24 Oct 2022 01:54:00 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=<MOVIES_API_KEY>&query=fight
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.6.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Sun, 16 Apr 2023 03:24:39 GMT
      Server:
      - openresty
      Cache-Control:
      - public, max-age=23994
      X-Memc:
      - HIT
      X-Memc-Key:
      - 7adb1aa0572b3e46e5895e476da586d4
      X-Memc-Age:
      - '25946'
      X-Memc-Expires:
      - '2654'
      Etag:
      - W/"d0c8b21bba941d38db91b1bc83795a0c"
      Vary:
      - Accept-Encoding
      - Origin
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 ea699166e6ec77aa410ff505b0a8ce18.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - SEA19-C3
      Alt-Svc:
      - h3=":443"; ma=86400
      X-Amz-Cf-Id:
      - mFXEP-yrOBnlpP0Uior4TGDi1u2nwT--d7qd2AXwAovcjHPB7azuDg==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Sun, 16 Apr 2023 03:24:39 GMT
recorded_with: VCR 6.1.0
